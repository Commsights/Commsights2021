@{ ViewData["Title"] = Model.Title + " - Product segment"; }

@model Commsights.MVC.Models.ReportMonthlyViewModel
@Html.HiddenFor(Model => Model.ID)
@Html.HiddenFor(Model => Model.Title)
<div>
    | <a href="/ReportMonthly/MonthlyReport?ID=@Model.ID" class="text-success" title="Report">Report</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Industry</a> |
    <a href="/ReportMonthly/MonthlyCompanyCount?ID=@Model.ID" class="text-success" title="Company">Company Count</a> |
    <a href="/ReportMonthly/MonthlyFeatureIndustry?ID=@Model.ID" class="text-success" title="Feature-Mention">Feature-Mention</a> |
    <a href="/ReportMonthly/MonthlySentimentIndustry?ID=@Model.ID" class="text-success" title="Sentiment">Sentiment</a> |
    <a href="/ReportMonthly/MonthlyChannel?ID=@Model.ID" class="text-success" title="Channel">Channel</a> |
    <a href="/ReportMonthly/MonthlyTierCommsights?ID=@Model.ID" class="text-success" title="Media Tiers">Media Tiers</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Category</a> |
    <a href="/ReportMonthly/MonthlyTrendLine?ID=@Model.ID" class="text-success" title="Trendline">Trendline</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Campaign</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Key Stories</a> |
    <a href="/ReportMonthly/MonthlyCompanyAndYear?ID=@Model.ID" class="text-success" title="MonthlyCompanyAndYear">Brand Growth</a> |
    <a href="/ReportMonthly/MonthlySegmentProduct?ID=@Model.ID" class="text-success" title="Product segment">Product segment</a> |
    <a href="/ReportMonthly/MonthlyTierCommsightsAndCompanyName?ID=@Model.ID" class="text-success" title="Top titles">Top titles</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Scorecard</a> |
    <a href="/ReportMonthly/MonthlyData?ID=@Model.ID" class="text-success" title="Data">Data</a> |
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">@Model.Title - Product segment</h3>
            </div>
            <div class="card-body">
                <div class="col-md-12">
                    <div id="DataSegmentProduct" class='col-sm-12'></div>
                </div>
                <hr />
                <div class="col-md-12">
                    <div class="row">
                        <div class='col-sm-2'>
                            <button type="button" class="btn btn-success" onclick="exportJPG('ChartColumnSegmentProduct')"><span class="fas fa-file-image"></span></button>
                        </div>
                    </div>
                    <div id="ChartColumnSegmentProduct"></div>
                    <div>
                                @(Html.Kendo().Chart<Commsights.Data.DataTransferObject.ReportMonthlySegmentProductDataTransfer>()
        .Name("ChartColumnSegmentProduct")
        .Theme("Material")
        .Title(t => t.Text("Segment vs Product").Color("#0000ff").Font("20px sans-serif"))
          .HtmlAttributes(new { style = "min-height:400px;" })
           .Legend(legend => legend
               .Position(ChartLegendPosition.Bottom)
           )
           .ChartArea(chartArea => chartArea
              .Background("#ffffff")
          )
           .DataSource(dataSource => dataSource
                    .Read(read => read.Action("GetSegmentProductWithoutSUMByIDToListToJSON", "ReportMonthly").Data("filterChartColumnSegmentProduct"))
                    .Group(group => group.Add(model => model.ProductName_ProjectName))
                    .Sort(sort => sort.Add(model => model.ProductPropertyCount).Ascending())
                )
                .SeriesDefaults(seriesDefaults =>
                        seriesDefaults.Column().Stack(true)
                    )
                .Series(series =>
                {
                    series.Column(model => model.ProductPropertyCount).CategoryField("SegmentProduct");
                })
            .ValueAxis(axis => axis
               .Numeric()
               .Name("Count")
               .Title("Count")
           )
           .Tooltip(tooltip => tooltip
               .Visible(true)
               .Shared(true)
               .Format("{0:N0}")
               .Template(": #= value #")
           )
             .Pannable(pannable => pannable
                    .Lock(ChartAxisLock.Y)
                )
                .Zoomable(zoomable => zoomable
                    .Mousewheel(mousewheel => mousewheel.Lock(ChartAxisLock.Y))
                    .Selection(selection => selection.Lock(ChartAxisLock.Y))
                )
                    )
                            </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>    
    function filterChartColumnSegmentProduct(e) {
        var IDValue = $("#ID").val();        
        return { ID: IDValue};
    }
    function exportJPG(control) {
        var Title = $('#Title').val();
        var id = "#" + control;
        var chart = $(id).getKendoChart();
        chart.exportImage().done(function (data) {
            kendo.saveAs({
                dataURI: data,
                fileName: Title + ".jpg",
                proxyURL: "@Url.Action("Export_Save", "ReportMonthly")"
            });
        });
    }
    $(document).ready(() => {
        onGetSegmentProductWithoutSUMByIDToListToJSON();
    });
    function onGetSegmentProductWithoutSUMByIDToListToJSON() {
        BeginRequestHandler();
        $("#DataSegmentProduct").html('');
        var IDValue = $("#ID").val();
         $.ajax({
            type: 'GET',
            url: "@Url.Action("GetSegmentProductWithoutSUMByIDToListToJSON", "ReportMonthly")",
            data: {
                ID: IDValue,
            },
             success: function (list) {
                 var html = '<table class="border01" id="Data01" cellspacing="4" style="background-color:#ffffff; width: 100%;">';
                 html = html + '<thead>';
                 html = html + '<tr>';
                 html = html + "<th class='text-center'><a style='cursor:pointer;'></a></th>";
                 html = html + "<th class='text-center'><a style='cursor:pointer;'>Segment</a></th>";
                 html = html + "<th class='text-center'><a style='cursor:pointer;'>Product</a></th>";
                 html = html + "<th class='text-center'><a style='cursor:pointer;'>Count</a></th>";
                 html = html + '</tr>';
                html = html + '</thead>';
                html = html + '<tbody>';
                var no = 0;
                 for (var index in list) {
                     $(list[index]).each(function (iRec, item) {
                        no = no + 1;
                        if (no % 2 == 0) {
                            html = html + '<tr style="background-color:#ffffff;">';
                        }
                        else {
                            html = html + '<tr style="background-color:#f1f1f1;">';
                         }
                         html = html + '<td class="text-center" style="font-weight: bold;">' + no + '</td>';
                         html = html + '<td class="text-left" style="font-weight: bold;">' + item.SegmentProduct + '</td>';
                         html = html + '<td class="text-left" style="font-weight: bold;">' + item.ProductName_ProjectName + '</td>';
                         html = html + '<td class="text-right" style="font-weight: bold;">' + item.ProductPropertyCount + '</td>';

                        html = html + '</tr>';
                    });
                }
                html = html + '</tbody>';
                html = html + '</table>';
                html = $.parseHTML(html);
                 $("#DataSegmentProduct").append(html);
            }
         }).done(() => {
             EndRequestHandler();
        });
    }

</script>