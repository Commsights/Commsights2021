@{ ViewData["Title"] = Model.Title + " - Data"; }

@model Commsights.Data.Models.ReportMonthly
@Html.HiddenFor(Model => Model.ID)
<div>
    | <a href="/ReportMonthly/MonthlyReport?ID=@Model.ID" class="text-success" title="Report">Report</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Industry</a> |
    <a href="/ReportMonthly/MonthlyCompanyCount?ID=@Model.ID" class="text-success" title="Company">Company Count</a> |
    <a href="/ReportMonthly/MonthlyFeatureIndustry?ID=@Model.ID" class="text-success" title="Feature-Mention">Feature-Mention</a> |
    <a href="/ReportMonthly/MonthlySentimentIndustry?ID=@Model.ID" class="text-success" title="Sentiment">Sentiment</a> |
    <a href="/ReportMonthly/MonthlyChannel?ID=@Model.ID" class="text-success" title="Channel">Channel</a> |
    <a href="/ReportMonthly/MonthlyTierCommsights?ID=@Model.ID" class="text-success" title="Media Tiers">Media Tiers</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Category</a> |
    <a href="/ReportMonthly/MonthlyTrendLine?ID=@Model.ID" class="text-success" title="Trendline">Trendline</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Campaign</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Key Stories</a> |
    <a href="/ReportMonthly/MonthlyCompanyAndYear?ID=@Model.ID" class="text-success" title="MonthlyCompanyAndYear">Brand Growth</a> |
    <a href="/ReportMonthly/MonthlySegmentProduct?ID=@Model.ID" class="text-success" title="Product segment">Product segment</a> |
    <a href="/ReportMonthly/MonthlyTierCommsightsAndCompanyName?ID=@Model.ID" class="text-success" title="Top titles">Top titles</a> |
    <a href="/ReportMonthly/MonthlyIndustry?ID=@Model.ID" class="text-success" title="Industtry">Scorecard</a> |
    <a href="/ReportMonthly/MonthlyData?ID=@Model.ID" class="text-success" title="Data">Data</a> |
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">@Model.Title - Data</h3>
            </div>
            <div class="card-body">

                @(Html.Kendo().Grid<Commsights.Data.Models.ProductProperty>()
.Name("ProductProperty")
.Columns(columns =>
{
    columns.Command(command => { command.Destroy().Text("&nbsp;").IconClass("fas fa-trash-alt").HtmlAttributes(new { style = "font-size: 16px; color:#ffffff; background-color:#d73925; padding-left:16px; padding-top:6px; border-radius: 6px; width:50px;" }); }).Width(70).Locked(true);
    columns.Template(@"<a target='_blank' href='#=URL#' title='#=Headline#' class='btn btn-success' style='color:white; cursor: pointer;'><i class='fas fa-external-link-alt'></i></a>").Title("View").Width(70).Locked(true);
    columns.Bound(t => t.Source).Title("Source").Width(100);
    columns.Bound(t => t.CategoryMain).Title("Main category").Width(200);
    columns.Bound(t => t.CategorySub).Title("Sub category").Width(200);
    columns.Bound(t => t.CompanyName).Title("Company").Width(200);
    columns.Bound(t => t.CorpCopy).Title("Corp Copy").Width(200);
    columns.Bound(t => t.SOECompany).Title("SOE (%)").Width(100).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.FeatureCorp).Title("Feature").Width(100);
    columns.Bound(t => t.SentimentCorp).Title("Sentiment").Width(200);
    columns.Bound(t => t.SegmentProduct).Title("Segment Product").Width(200);
    columns.Bound(t => t.ProductName_ProjectName).Title("Product name").Width(200);
    columns.Bound(t => t.SOEProduct).Title("SOE (%)").Width(100).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.FeatureProduct).Title("Feature").Width(100);
    columns.Bound(t => t.SentimentProduct).Title("Sentiment").Width(200);
    columns.Bound(t => t.TierCommsights).Title("Tier CommSights").Width(200);
    columns.Bound(t => t.TierCustomer).Title("Tier Customer").Width(200);
    columns.Bound(t => t.SpokePersonName).Title("Spoke person name").Width(200);
    columns.Bound(t => t.SpokePersonTitle).Title("Spoke person title").Width(200);
    columns.Bound(t => t.ToneValue).Title("Tone value").Width(150).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.HeadlineValue).Title("Headline value").Width(150).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.SpokePersonValue).Title("Spoke person value").Width(200).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.FeatureValue).Title("Feature value").Width(150).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.TierValue).Title("Tier value").Width(150).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.PictureValue).Title("Picture value").Width(150).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.MPS).Title("MPS").Width(100).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.ROME_Corp_VND).Title("ROME Corp").Width(150).Format("{0:N0}").HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.ROME_Product_VND).Title("ROME Product").Width(150).Format("{0:N0}").HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.DatePublish).Title("Publish").Width(150).Format("{0:MM/dd/yyyy}").HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.Page).Title("Page").Width(200).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.Duration).Title("Page").Width(200).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.Journalist).Title("Journalist").Width(150);
    columns.Bound(t => t.MediaTitle).Title("Media").Width(300);
    columns.Bound(t => t.MediaType).Title("Type").Width(100);
    columns.Bound(t => t.Advalue).Title("AdValue").Format("{0:N0}").Width(150).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.Headline).Title("Headline").Width(1000);
    columns.Bound(t => t.HeadlineEngLish).Title("EngLish").Width(1000);
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(100000)
.Model(model =>
{
    model.Id(t => t.ID);
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetProductPropertyByReportMonthlyIDToList", "ReportMonthly").Data("filterReportMonthlyProperty"))
.Destroy(t => t.Action("DeleteReportMonthlyProperty", "ReportMonthly"))
)
)
            </div>
        </div>
    </div>
</div>

<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#ProductProperty").data("kendoGrid").dataSource.read();
        }
    }
    function filterReportMonthlyProperty(e) {
        var reportMonthlyIDValue = $("#ID").val();
        return { reportMonthlyID: reportMonthlyIDValue };
    }
</script>