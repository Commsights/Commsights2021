@{ ViewData["Title"] = "Company detail"; }

@model Commsights.Data.Models.Membership

<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Company detail</h3>
            </div>
            <div class="card-body">
                <form asp-action="SaveCompany" asp-controller="Membership">
                    @Html.HiddenFor(Model => Model.ID)
                    <div class="row">
                        <div class='col-md-6'>
                            @(Html.Kendo().DropDownListFor(Model => Model.CategoryID)
                                   .DataValueField("ID")
                                   .DataTextField("TransferName")
                                   .HtmlAttributes(new {@class = "form-control" })
                                    .Filter(FilterType.Contains)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCompetitorDataTransferToList", "Membership")))
                                    )
                        </div>
                        <div class='col-md-1'>
                            <a style="width:100%; cursor:pointer; color:#ffffff;" title="Tìm" onclick="onSearch()" class="btn btn-success">
                                <span class="fas fa-search"></span>
                            </a>
                        </div>
                        <div class='col-md-2'>
                        </div>
                        <div class='col-md-1'>
                            <button style="width:100%;" type="submit" title="Save" class="btn btn-primary">
                                <span class="fas fa-save"></span>
                            </button>
                        </div>
                        <div class='col-md-1'>
                            <a asp-action="CompanyPlus" asp-controller="Membership" title="Company category" style="width:100%;" class="btn btn-success">
                                <span class="fas fa-plus"></span>
                            </a>
                        </div>
                        <div class='col-md-1'>
                            <a asp-action="CompanyCancel" asp-controller="Membership" title="Company category" style="width:100%;" class="btn btn-info">
                                <span class="fas fa-arrow-left"></span>
                            </a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class='form-group'>
                                <label for='Account'>Company</label>
                                @(Html.TextBoxFor(Model => Model.Account, new { placeholder = "Company", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='FullName'>Full name</label>
                                @(Html.TextBoxFor(Model => Model.FullName, new { placeholder = "Full name", @class = "form-control" }))
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class='form-group'>
                                <label for='Phone'>Category</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.ParentID)
                                   .DataValueField("ID")
                                   .DataTextField("CodeName")
                                   .HtmlAttributes(new {@class = "form-control" })
                                    .Filter(FilterType.Contains)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetMembershipTypeToList", "Config")))
                                    )
                            </div>
                            <div class='form-group'>
                                <label for='Website'>Website</label>
                                @(Html.TextBoxFor(Model => Model.Website, new { placeholder = "Website", @class = "form-control" }))
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Name</h3>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<Commsights.Data.Models.MembershipPermission>()
.Name("MembershipPermissionCompanyName")
.Columns(columns =>
{
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "font-size: 16px; padding-left:16px; padding-top:6px; border-radius: 6px; font-weight:bold; width:50px;" }); command.Destroy().Text("&nbsp;").IconClass("fas fa-trash-alt").HtmlAttributes(new { style = "font-size: 16px; color:#ffffff; background-color:#d73925; padding-left:16px; padding-top:6px; border-radius: 6px; width:50px;" }); }).Width(150);
    columns.Bound(t => t.FullName).Title("Name").Width(400).HtmlAttributes(new { style="width:100%;" });
})
.ToolBar(toolBar => toolBar.Create().Text("&nbsp;").IconClass("fas fa-plus").HtmlAttributes(new { style = "font-size: 16px; border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
})
.Events(t => { t.RequestEnd("onGridRequestEndMembershipPermissionCompanyName"); })
.Read(t => t.Action("GetByMembershipIDAndCompanyNameToList", "MembershipPermission").Data("filterMembershipPermissionIndustry"))
.Destroy(t => t.Action("Delete", "MembershipPermission"))
.Create(t => t.Action("CreateCompanyName", "MembershipPermission").Data("filterMembershipPermissionIndustry"))
.Update(t => t.Action("Update", "MembershipPermission"))
)
)
            </div>
        </div>
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Industry</h3>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<Commsights.Data.DataTransferObject.MembershipPermissionDataTransfer>()
.Name("MembershipPermissionDataTransferIndustry")
.Columns(columns =>
{
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "font-size: 16px; padding-left:16px; padding-top:6px; border-radius: 6px; font-weight:bold; width:50px;" }); command.Destroy().Text("&nbsp;").IconClass("fas fa-trash-alt").HtmlAttributes(new { style = "font-size: 16px; color:#ffffff; background-color:#d73925; padding-left:16px; padding-top:6px; border-radius: 6px; width:50px;" }); }).Width(150);
    columns.Bound(t => t.Industry.TextName).EditorTemplateName("Config_Industry").Title("Industry").Width(300);
})
.ToolBar(toolBar => toolBar.Create().Text("&nbsp;").IconClass("fas fa-plus").HtmlAttributes(new { style = "font-size: 16px; border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.FullName); search.Field(f => f.Email); search.Field(f => f.Phone); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
    model.Field(t => t.Industry).DefaultValue(new Commsights.Data.DataTransferObject.ModelTemplate());
})
.Events(t => { t.RequestEnd("onGridRequestEndIndustry"); })
.Read(t => t.Action("GetDataTransferIndustryByMembershipIDAndIndustryToList", "MembershipPermission").Data("filterMembershipPermissionIndustry"))
.Destroy(t => t.Action("Delete", "MembershipPermission"))
.Create(t => t.Action("CreateDataTransferIndustry", "MembershipPermission").Data("filterMembershipPermissionCreateIndustry"))
.Update(t => t.Action("UpdateDataTransferIndustry", "MembershipPermission"))
)
)
            </div>
        </div>
        <hr />
        <div class="row">
            <div class='col-sm-2'>
                <b>Industry apply all</b>
            </div>
            <div class='col-sm-4'>
                @(Html.Kendo().DropDownList()
                     .Name("Industry")
                     .DataValueField("IndustryID")
                     .DataTextField("IndustryName")
                    .HtmlAttributes(new { @class = "form-control" })
                      .Events(e => e.DataBound("onIndustryDataBound"))
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetDataTransferIndustryByMembershipIDAndIndustryToList", "MembershipPermission").Data("filterMembershipPermissionIndustry")))
                            )
            </div>
            <div class='col-sm-1'>
                <button style="width:100%;" title="Search" class="btn btn-success" onclick="onSearchIndustry()">
                    <span class="fas fa-search"></span>
                </button>
            </div>
        </div>
        <hr />
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Segment and Product</h3>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<Commsights.Data.DataTransferObject.MembershipPermissionDataTransfer>()
.Name("MembershipPermissionDataTransferProduct")
.Columns(columns =>
{
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "font-size: 16px; padding-left:16px; padding-top:6px; border-radius: 6px; font-weight:bold; width:50px;" }); command.Destroy().Text("&nbsp;").IconClass("fas fa-trash-alt").HtmlAttributes(new { style = "font-size: 16px; color:#ffffff; background-color:#d73925; padding-left:16px; padding-top:6px; border-radius: 6px; width:50px;" }); }).Width(150);
    columns.Bound(t => t.Segment.TextName).EditorTemplateName("Config_SegmentByIndustry").Title("Segment").Width(300);
    columns.Bound(t => t.ProductName).Title("Product").Width(300);
})
.ToolBar(toolBar => toolBar.Create().Text("&nbsp;").IconClass("fas fa-plus").HtmlAttributes(new { style = "font-size: 16px; border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
    model.Field(t => t.Segment).DefaultValue(new Commsights.Data.DataTransferObject.ModelTemplate());
})
.Events(t => { t.RequestEnd("onGridRequestEndProduct"); })
.Read(t => t.Action("GetDataTransferSegmentByMembershipIDAndIndustryIDAndCodeToList", "MembershipPermission").Data("filterMembershipPermissionByMembershipIDAndIndustryID"))
.Destroy(t => t.Action("Delete", "MembershipPermission"))
.Create(t => t.Action("CreateDataTransferSegmentProduct", "MembershipPermission").Data("filterMembershipPermissionByMembershipIDAndIndustryID"))
.Update(t => t.Action("UpdateDataTransferSegmentProduct", "MembershipPermission"))
)
)
            </div>
        </div>
    </div>
</div>



@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function onSearchIndustry() {
        BeginRequestHandler();
        $("#MembershipPermissionDataTransferProduct").data("kendoGrid").dataSource.read();        
        EndRequestHandler();
    }
    //Company Name
    function onGridRequestEndMembershipPermissionCompanyName(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#MembershipPermissionCompanyName").data("kendoGrid").dataSource.read();
        }
    }
    function onGridRequestEndIndustry(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#MembershipPermissionDataTransferIndustry").data("kendoGrid").dataSource.read();
        }
    }
    function filterMembershipPermissionIndustry(e) {
        var membershipIDValue = $("#ID").val();
        return { membershipID: membershipIDValue };
    }
    function filterMembershipPermissionCreateIndustry(e) {
        var membershipIDValue = $("#ID").val();
        return { membershipID: membershipIDValue };
    }
    function onGridRequestEndProduct(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#MembershipPermissionDataTransferProduct").data("kendoGrid").dataSource.read();
        }
    }

    function filterProduct(e) {
        var membershipIDValue = $("#ID").val();
        return { membershipID: membershipIDValue };
    }
    function filterCreateProduct(e) {
        var membershipIDValue = $("#ID").val();        
        var industryIDValue = $("#Industry").data("kendoDropDownList").value();
        return { membershipID: membershipIDValue, industryID: industryIDValue };
    }
    function onSearch() {
        var IDValue = $("#CategoryID").data("kendoDropDownList").value();
        var url = "/Membership/CompanyDetail/" + IDValue;
        window.location.replace(url);
    }
    function onIndustryDataBound() {
        var control = $("#Industry").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            control.select(0);
            onSearchIndustry();
        }
    }
    function filterConfig_SegmentByIndustry(e) {
        var parentIDValue = $("#Industry").data("kendoDropDownList").value();
        return { parentID: parentIDValue };
    }
    function filterMembershipPermissionByMembershipIDAndIndustryID(e) {
        var membershipIDValue = $("#ID").val();
        var industryIDValue = $("#Industry").data("kendoDropDownList").value();
        return { membershipID: membershipIDValue, industryID: industryIDValue };
    }
</script>
