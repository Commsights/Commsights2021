@{ Layout = "~/Views/Shared/_LayoutNoHeader.cshtml"; ViewData["Title"] = Model.Title + " - Detail basic"; }

@model Commsights.Data.DataTransferObject.CodeData


<div class="row" style="margin-top:-7px;">
    <div class="col-md-12">
        <div class="card card-primary" style="margin-bottom: -5px;">
            <div class="card-body" style="padding-top:2px;">
                <form asp-action="SaveCodingDetailBasic" asp-controller="CodeData">
                    @Html.HiddenFor(Model => Model.IndustryID)
                    @Html.HiddenFor(Model => Model.RowIndex)
                    @Html.HiddenFor(Model => Model.ProductID)
                    @Html.HiddenFor(Model => Model.ProductPropertyID)
                    @Html.HiddenFor(Model => Model.Advalue)
                    @Html.HiddenFor(Model => Model.URLCode)
                    <div class="row">
                        <div class='col-md-2'>
                        </div>
                        <div class='col-md-1'>
                            @(Html.CheckBoxFor(Model => Model.IsCoding.Value, new { @disabled = "disabled" }))
                            <p style="display:inline-block; font-size:14px; font-weight:bold; margin:0; padding-left:10px;">Code</p>
                        </div>
                        <div class='col-md-2 text-center'>
                            <span style="font-weight:bold; font-size:18px;">@Model.RowIndexCount / @Model.RowCount</span>
                        </div>
                        <div class='col-md-1'>
                            <a id="RowNext" onclick="onRowMove(@Model.RowNext)" style="color:#ffffff;" title="Next" class="btn btn-info">
                                <span class="fas fa-angle-right"></span> (1)
                            </a>
                        </div>
                        <div class='col-md-1'>
                            <a id="URLCode" onclick="onOpenBlank('@Model.URLCode')" title='@Model.Title' class='btn btn-success' style='color:white; cursor: pointer;'><i class='fas fa-external-link-alt'></i> (2)</a>
                        </div>
                        <div class='col-md-2'>
                            @(Html.CheckBoxFor(Model => Model.IsSummary.Value))
                            <p style="display:inline-block; font-size:14px; font-weight:bold; margin:0; padding-left:10px;">Brief (3)</p>
                        </div>
                        <div class='col-md-1'>
                            <button id="SaveCoding" style="width:100%;" type="submit" title="Save" class="btn btn-primary" autofocus="autofocus">
                                <span class="fas fa-save"></span> (4)
                            </button>
                        </div>
                        <div class='col-md-1'>
                            <a id="CopyURLSame" onclick="onCopyURLSame()" title='Copy URL Same' class='btn btn-primary' style='color:white; cursor: pointer;'>=URL (5)</a>
                        </div>
                        <div class='col-md-1'>
                            <a id="CopyURLAnother" onclick="onCopyURLAnother()" title='Copy URL Another' class='btn btn-primary' style='color:white; cursor: pointer;'>#URL (6)</a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class='form-group'>
                                <label for='CategorySub'>Category Sub (@Model.CategorySubHiden)</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CategorySub)
                     .DataValueField("CodeName")
                     .DataTextField("CodeName")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCategorySubByIndustryIDToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='SentimentCorp'>Sentiment</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.SentimentCorp)
                     .DataValueField("CodeName")
                     .DataTextField("CodeName")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetSentimentToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='SOECompany'>SOE Corp (%) (@Model.FeatureCorp)</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.SOECompany)
                     .DataValueField("Display")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetSEOToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='SOEProduct'>SOE Product (%) (@Model.FeatureProduct)</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.SOEProduct)
                     .DataValueField("Display")
                     .DataTextField("Display")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetSEOToList", "AppGlobal")))
                            )
                            </div>
                            <div class='form-group' style="height:134px;">
                                <label for='CompanyName'>Company (@Model.CompanyNameHiden)</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CompanyName)
                     .DataValueField("Account")
                     .DataTextField("Account")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.Contains)
                       .Events(e => e.Change("onCompanyNameChange"))
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetByIndustryID001ByActiveToList", "Membership")))
                            )
                            </div>
                            <div class='form-group' style="height:134px;">
                                <label for='ProductName_ProjectName'>Product (@Model.ProductNameHiden)</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.ProductName_ProjectName)
                     .DataValueField("ProductName")
                     .DataTextField("ProductName")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetProductByAccountAndCodeAndIndustryIDToList", "MembershipPermission").Data("filterMembershipPermission")))
                            )
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class='form-group'>
                                <label for='DatePublish'>Publish (MM/dd/yyyy)</label>
                                @(Html.Kendo().DatePickerFor(Model => Model.DatePublish)
                                     .Format("MM/dd/yyyy")
                                     .HtmlAttributes(new { @class = "form-control text-right"})
                                     .DateInput()
                                )
                            </div>
                            <div class='form-group'>
                                <label for='Title'>Headline (Vie)</label>
                                @(Html.TextBoxFor(Model => Model.Title, new { @class = "form-control", @title = Model.Title }))
                                <div id="TitleHiden" style="display:none;">@Model.Title</div>
                            </div>
                            <div class='form-group'>
                                <label for='TitleEnglish'>Headline (Eng)</label>
                                @(Html.TextBoxFor(Model => Model.TitleEnglish, new { @class = "form-control", @title = Model.TitleEnglish }))
                                <div id="TitleEnglishHiden" style="display:none;">@Model.TitleEnglish</div>
                            </div>
                            <div class='form-group'>
                                <label for='Author'>Journalist</label>
                                @(Html.TextBoxFor(Model => Model.Author, new { @class = "form-control", @title = Model.Author }))
                            </div>
                            <div class='form-group'>
                                <label for='Description'>Summary (Vie)</label>
                                @(Html.TextAreaFor(Model => Model.Description, new { @class = "form-control", @title = Model.Description, @style = "height:100px;" }))
                                <div id="DescriptionHiden" style="display:none;">@Model.Description</div>
                            </div>
                            <div class='form-group'>
                                <label for='DescriptionEnglish'>Summary (Eng)</label>
                                @(Html.TextAreaFor(Model => Model.DescriptionEnglish, new { @class = "form-control", @title = Model.DescriptionEnglish, @style="height:100px;" }))
                                <div id="DescriptionEnglishHiden" style="display:none;">@Model.DescriptionEnglish</div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class='form-group'>
                                <label for='Note'>Note</label>
                                @(Html.TextBoxFor(Model => Model.Note, new { @class = "form-control", @title = Model.Note }))
                            </div>
                            <div class='form-group'>
                                <label for='TitleProperty'>Headline (Property)</label>
                                @(Html.TextBoxFor(Model => Model.TitleProperty, new { @class = "form-control", @title = Model.TitleProperty }))
                            </div>
                            <div class='form-group'>
                                <label for='SourceProperty'>Source (Property)</label>
                                @(Html.TextBoxFor(Model => Model.SourceProperty, new { @class = "form-control text-right", @title = Model.SourceProperty }))
                            </div>
                            <div class='form-group'>
                                <label for='Source'>Source</label>
                                @(Html.TextBoxFor(Model => Model.Source, new { @class = "form-control text-right", @title = Model.Source, @readonly = "readonly" }))
                            </div>
                            <div class='form-group'>
                                <label for='TierCommsights'>Tier Commsights</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.TierCommsights)
                     .DataValueField("CodeName")
                     .DataTextField("CodeName")
                    .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetMediaTierToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='KeyMessage'>Key Message</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.KeyMessage)
                                 .DataValueField("CodeName")
                                 .DataTextField("CodeName")
                                .HtmlAttributes(new { @class = "form-control" })
                                   .Filter(FilterType.Contains)
                                 .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetKeyMessageByIndustryID001ToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='CampaignName'>Campaign name</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CampaignName)
                                 .DataValueField("CodeName")
                                 .DataTextField("CodeName")
                                .HtmlAttributes(new { @class = "form-control" })
                                   .Filter(FilterType.Contains)
                                   .Events(e => e.Change("onCampaignNameChange"))
                                 .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCampaignNameByIndustryID001ToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='CampaignKeyMessage'>Campaign key</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CampaignKeyMessage)
                                 .DataValueField("CodeName")
                                 .DataTextField("CodeName")
                                .HtmlAttributes(new { @class = "form-control" })
                                   .Filter(FilterType.Contains)
                                 .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCampaignKeyMessageByCampaignNameAndIndustryIDToList", "Config").Data("filterCampaignKeyMessage")))
                            )
                            </div>
                        </div>                      
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)
<script>
    $(document).ready(() => {
        onLoad();
    });
    function onLoad() {
        var actionMessage = getParameterByName('ActionMessage');
        if (actionMessage != null) {
            if (actionMessage.length > 0) {
                var messageType = actionMessage.split('-')[0];
                var note = actionMessage.split('-')[1];
                var notification = $("#Notification").data("kendoNotification");
                notification.show(note, messageType);
            }
        }
    }
     function onCopyURLSame() {
        BeginRequestHandler();
        var productPropertyIDValue = $("#ProductPropertyID").val();
        $.ajax({
            type: 'GET',
            url: "@Url.Action("BasicCopyURLSame", "CodeData")",
            data: {
                productPropertyID: productPropertyIDValue
            },
            success: function (productPropertyIDResult) {                
                var url = "/CodeData/DetailBasic?ProductPropertyID=" + productPropertyIDResult;
                location.replace(url);
            }
            }).done(() => {
        });
    }
    function onCopyURLAnother() {
        BeginRequestHandler();
        var productPropertyIDValue = $("#ProductPropertyID").val();
        $.ajax({
            type: 'GET',
            url: "@Url.Action("BasicCopyURLAnother", "CodeData")",
            data: {
                productPropertyID: productPropertyIDValue
            },
            success: function (productPropertyIDResult) {
                var url = "/CodeData/DetailBasic?ProductPropertyID=" + productPropertyIDResult;
                location.replace(url);
            }
            }).done(() => {
        });
    }
    function filterCampaignKeyMessage(e) {
        var campaignNameValue = $("#CampaignName").data("kendoDropDownList").value();
        return { campaignName: campaignNameValue };
    }
    function filterCategorySub(e) {
        var categoryMainValue = $("#CategoryMain").data("kendoDropDownList").value();
        return { categoryMain: categoryMainValue };
    }
    function onCampaignNameChange() {
        $("#CampaignKeyMessage").data("kendoDropDownList").dataSource.read();
    }
    function onCategoryMainChange() {
        $("#CategorySub").data("kendoDropDownList").dataSource.read();
    }
    function filterMembershipPermission(e) {
        var accountValue = $("#CompanyName").data("kendoDropDownList").value();
        return { account: accountValue };
    }

    function onCompanyNameChange() {
        $("#ProductName_ProjectName").data("kendoDropDownList").dataSource.read();
    }

    function onRowMove(productPropertyID) {
        var url = "/CodeData/DetailBasic?ProductPropertyID=" + productPropertyID;
        location.replace(url);
    }
    function onOpenBlank(url) {
        window.open(url, '_blank');
    }
    $(document).keyup(function (e) {
        var e = e || window.event;
        if (e.altKey == true) {
            switch (e.keyCode) {
                case 49:
                    document.getElementById('RowNext').click();
                    break;
                case 50:
                    document.getElementById('URLCode').click();
                    break;
                case 51:
                    var isSummary_ValueChecked = document.getElementById("IsSummary_Value").checked;
                    if (isSummary_ValueChecked == true) {
                        document.getElementById("IsSummary_Value").checked = false;
                    }
                    else {
                        document.getElementById("IsSummary_Value").checked = true;
                    }
                    break;
                case 52:
                    document.getElementById('SaveCoding').click();
                    break;
                case 53:
                    document.getElementById('CopyURLSame').click();
                    break;
                case 54:
                    document.getElementById('CopyURLAnother').click();
                    break;
            }
        }
    });
    $("#Title").focus(function () {
        document.getElementById("TitleHiden").style.display = "block";
    });
    $("#Title").focusout(function () {
        document.getElementById("TitleHiden").style.display = "none";
    });
    $("#TitleEnglish").focus(function () {
        document.getElementById("TitleEnglishHiden").style.display = "block";
    });
    $("#TitleEnglish").focusout(function () {
        document.getElementById("TitleEnglishHiden").style.display = "none";
    });
    $("#Description").focus(function () {
        document.getElementById("DescriptionHiden").style.display = "block";
    });
    $("#Description").focusout(function () {
        document.getElementById("DescriptionHiden").style.display = "none";
    });
    $("#DescriptionEnglish").focus(function () {
        document.getElementById("DescriptionEnglishHiden").style.display = "block";
    });
    $("#DescriptionEnglish").focusout(function () {
        document.getElementById("DescriptionEnglishHiden").style.display = "none";
    });
</script>