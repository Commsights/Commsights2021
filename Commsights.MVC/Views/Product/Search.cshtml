@{ ViewData["Title"] = "Search"; }

@model Commsights.Data.Models.ProductSearch

<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Data - Search</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class='col-sm-2'>
                        @(Html.Kendo().DatePickerFor(Model => Model.DatePublishBegin)
                                     .Format("dd/MM/yyyy")
                                     .HtmlAttributes(new { @class = "form-control", title = "Begin" })
                                     .DateInput()
                                )
                    </div>
                    <div class='col-sm-2'>
                        @(Html.Kendo().DatePickerFor(Model => Model.DatePublishEnd)
                                     .Format("dd/MM/yyyy")
                                     .HtmlAttributes(new { @class = "form-control", title = "End" })
                                     .DateInput()
                                )
                    </div>
                    <div class='col-sm-4'>
                        <input id="Search" name="Search" class="form-control" placeholder="Search" type="text" value="" />
                    </div>
                    <div class='col-sm-1'>
                        <button type="button" class="btn btn-success" onclick="onSearch()">
                            <span class="fa fa-search"></span>
                        </button>
                    </div>
                    <div class='col-sm-2' style="display:flex; justify-content:start; align-items:center;">
                        <input id="chkAll" type="checkbox">
                        <p style="display:inline-block; font-size:14px; font-weight:bold; margin:0; padding-left:10px;">All</p>
                    </div>
                    <div class='col-sm-1'>
                        <button type="button" class="btn btn-primary btn-sm" onclick="onSaveProductSearch()">
                            <span class="fas fa-save"></span>
                        </button>
                    </div>
                </div>
                <br />
                @(Html.Kendo().Grid<Commsights.Data.Models.Product>()
.Name("Product")
.Columns(columns =>
{
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "font-size: 16px; padding-left:16px; padding-top:6px; border-radius: 6px; font-weight:bold; width:50px;" });}).Width(150);
    columns.Bound(t => t.Active).Title("Select").Width(100);
    columns.Bound(t => t.DatePublish).Title("Publish").Width(200);
    columns.Template(@"<a onclick='javascript:OpenWindowByURL(""#=URLCode#"");' style='color: blue; cursor: pointer;'>#=Title#</a>").Title("Title + URL").Width(1000);
    columns.Bound(t => t.Description).Title("Description").Width(2000);
    columns.Bound(t => t.URLCode).Title("URL").Width(2000);
    columns.Bound(t => t.DateUpdated).Title("Updated").Width(200);
    columns.Bound(t => t.ID).Title("ID").Width(100);
})
.ToolBar(toolBar => toolBar.Create().Text("&nbsp;").IconClass("fas fa-plus").HtmlAttributes(new { style = "font-size: 16px; border-radius: 6px; font-weight:bold; background-color:#009966; color:#ffffff; padding-left:16px;" }))
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.Title); search.Field(f => f.URLCode); search.Field(f => f.Description); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
    model.Field(t => t.ID).Editable(false);
    model.Field(t => t.DateUpdated).Editable(false);
    model.Field(t => t.DatePublish).Editable(false);
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetBySearchAndDatePublishBeginAndDatePublishEndToList", "Product").Data("filterProduct"))
.Update(t => t.Action("Update", "Product"))
)
)
            </div>
        </div>
    </div>
</div>



@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)
<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#Product").data("kendoGrid").dataSource.read();
        }
    }
    function filterProduct(e) {
        var searchValue = $("#Search").val();
        var datePublishBeginValue = toDate02($("#DatePublishBegin").val());
        var datePublishEndValue = toDate02($("#DatePublishEnd").val());
        return { search: searchValue, datePublishBegin: datePublishBeginValue, datePublishEnd: datePublishEndValue };
    }
    function onSearch() {
        $("#Product").data("kendoGrid").dataSource.read();
    }
    function onSaveProductSearch() {
        BeginRequestHandler();
        var searchValue = $("#Search").val();
        var datePublishBeginValue = toDate02($("#DatePublishBegin").val());
        var datePublishEndValue = toDate02($("#DatePublishEnd").val());
        var isAllValue = document.getElementById('chkAll').checked;
        $.ajax(
            {
                type: "POST",
                datatype: "JSON",
                url: '@Url.Action("SaveProductSearch", "ProductSearch")',
                data: { search: searchValue, datePublishBegin: datePublishBeginValue, datePublishEnd: datePublishEndValue, isAll: isAllValue },
                success: function (result) {
                    EndRequestHandler();
                    window.location.replace(result);
                },
                error: function (jqXHR, exception) { },
                complete: function () { },
            });
    }
</script>
