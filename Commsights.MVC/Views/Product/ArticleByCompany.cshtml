@{ ViewData["Title"] = "Article by company"; }

@model Commsights.MVC.Models.BaseViewModel

<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Data - Article by company</h3>
            </div>
            <div class="card-body">
                <input type="hidden" id="Action" name="Action" value="0">
                <div class="row">
                    <div class='col-sm-2'>
                        @(Html.Kendo().DatePickerFor(Model => Model.DatePublish)
                                     .Format("dd/MM/yyyy")
                                     .HtmlAttributes(new { @class = "form-control text-right", title = "Date publish" })
                                     .DateInput()
                                )
                    </div>
                    <div class='col-sm-1'>
                        <button type="button" class="btn btn-success" onclick="onSearch()">
                            <span class="fa fa-search"></span>
                        </button>
                    </div>
                    <div class='col-sm-5'>
                        @(Html.Kendo().DropDownList()
                     .Name("Company")
                     .DataValueField("ID")
                     .DataTextField("Account")
                     .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.StartsWith)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetByCompanyToList", "Membership")))
                            )
                    </div>
                    <div class='col-sm-1'>
                        <button type="button" class="btn btn-success" onclick="onSearchCompany()">
                            <span class="fa fa-search"></span>
                        </button>
                    </div>
                    <div class='col-md-1'>
                        <button type="button" class="btn btn-success" onclick="onExportExcelArticleCompany()">
                            <span class="fa fa-file-excel"></span>
                        </button>
                    </div>
                </div>
                <br />
                @(Html.Kendo().Grid<Commsights.Data.DataTransferObject.ProductDataTransfer>()
.Name("ProductDataTransfer")
.Columns(columns =>
{
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "font-size: 16px; padding-left:16px; padding-top:6px; border-radius: 6px; font-weight:bold; width:50px;" }); }).Width(150);
    columns.Bound(t => t.Active).Title("Select").Width(100);
    columns.Bound(t => t.DatePublish).Title("Publish").Width(200).HtmlAttributes(new { @class = "text-right" });
    columns.Template(@"<a onclick='javascript:OpenWindowByURL(""#=URLCode#"");' style='color: blue; cursor: pointer;'>#=Title#</a>").Title("Title + URL").Width(600);
    columns.Bound(t => t.CompanyName).Title("Company first").Width(200);
    columns.Template(@"<a onclick='javascript:OpenWindowByURL(""/ProductProperty/Company/#=ID#"");' class='btn btn-success' style='color: white; cursor: pointer;'><i class='fas fa-list-ul'></i></a>").Title("List").Width(70).HtmlAttributes(new { style = "text-align:center;" });
    columns.Bound(t => t.ParentName).Title("Website").Width(200);
    columns.Bound(t => t.IndustryName).Title("Industry").Width(200);
    columns.Bound(t => t.ArticleTypeName).Title("Article type").Width(200);
    columns.Bound(t => t.AssessName).Title("Assess").Width(200);
    columns.Bound(t => t.ID).Title("ID").Width(100);
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.CompanyName); search.Field(f => f.Title); search.Field(f => f.URLCode); search.Field(f => f.ParentName); search.Field(f => f.IndustryName); search.Field(f => f.ArticleTypeName); search.Field(f => f.AssessName); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
    model.Field(t => t.ID).Editable(false);
    model.Field(t => t.DatePublish).Editable(false);
    model.Field(t => t.CompanyName).Editable(false);
    model.Field(t => t.ParentName).Editable(false);
    model.Field(t => t.IndustryName).Editable(false);
    model.Field(t => t.ArticleTypeName).Editable(false);
    model.Field(t => t.AssessName).Editable(false);
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetDataTransferByDatePublishAndArticleTypeIDAndCompanyIDAndActionToList", "Product").Data("filterProduct"))
)
)
            </div>
        </div>
    </div>
</div>
@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)
<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#ProductDataTransfer").data("kendoGrid").dataSource.read();
        }
    }
    function filterProduct(e) {
        var datePublishValue = toDate02($("#DatePublish").val());
        var companyIDValue = $("#Company").data("kendoDropDownList").value();
        var actionValue = $("#Action").val();
        return { datePublish: datePublishValue, companyID: companyIDValue, action: actionValue };

    }
    function onSearch() {
        $("#Action").val('0');
        $("#ProductDataTransfer").data("kendoGrid").dataSource.read();
    }
    function onSearchCompany() {
        $("#Action").val('1');
        $("#ProductDataTransfer").data("kendoGrid").dataSource.read();
    }
    function onExportExcelArticleCompany() {
        BeginRequestHandler();
        var datePublishValue = toDate02($("#DatePublish").val());
        var yearValue = datePublishValue.split('/')[0];
        var monthValue = datePublishValue.split('/')[1];
        var dayValue = datePublishValue.split('/')[2];
        var url = "/Report/ExportExcelArticleCompany?year=" + yearValue + "&month=" + monthValue + "&day=" + dayValue;
        location.replace(url);
        EndRequestHandler();
    }
</script>
