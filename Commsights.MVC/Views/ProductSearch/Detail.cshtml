@{ ViewData["Title"] = "Search detail"; }


@model Commsights.Data.Models.ProductSearch

@Html.HiddenFor(Model => Model.ID)
<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Data - Search analytical</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class='col-sm-2'>
                        @(Html.TextBoxFor(Model => Model.DatePublishBegin, "{0:dd/MM/yyyy}", new { placeholder = "Begin", disabled = "disabled", @class = "form-control text-right" }))
                    </div>
                    <div class='col-sm-2'>
                        @(Html.TextBoxFor(Model => Model.DatePublishEnd, "{0:dd/MM/yyyy}", new { placeholder = "End", disabled = "disabled", @class = "form-control text-right" }))
                    </div>
                    <div class='col-sm-8'>
                        @(Html.TextBoxFor(Model => Model.SearchString, new { placeholder = "Search", disabled = "disabled", @class = "form-control" }))
                    </div>
                </div>
                <br />
                @(Html.Kendo().Grid<Commsights.Data.DataTransferObject.ProductSearchPropertyDataTransfer>()
.Name("ProductSearchPropertyDataTransfer")
.Columns(columns =>
{
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "font-size: 16px; padding-left:16px; padding-top:6px; border-radius: 6px; font-weight:bold; width:50px;" }); command.Destroy().Text("&nbsp;").IconClass("fas fa-trash-alt").HtmlAttributes(new { style = "font-size: 16px; color:#ffffff; background-color:#d73925; padding-left:16px; padding-top:6px; border-radius: 6px; width:50px;" }); }).Width(150);
    columns.Template(@"<a onclick='javascript:OpenWindowByURL(""/ProductSearchProperty/Index/#=ID#"");' class='btn btn-success' style='color:white;'><i class='fas fa-list-ul'></i></a>").Width(70).HtmlAttributes(new { style = "text-align:center;" });
    columns.Bound(t => t.ArticleType.TextName).EditorTemplateName("Config_ArticleType").Title("Type").Width(200);
    columns.Template(@"<a onclick='javascript:OpenWindowByURL(""#=URLCode#"");' style='color: blue; cursor: pointer;'>#=Title#</a>").Title("Title + URL").Width(1000);
    columns.Bound(t => t.Media).Title("Source").Width(200);
    columns.Bound(t => t.ChannelName).Title("Channel").Width(200);
    columns.Bound(t => t.DatePublish).Title("Publish").Width(200);
    columns.Bound(t => t.Description).Title("Description").Width(2000);
    columns.Bound(t => t.URLCode).Title("URL").Width(2000);
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.Title); search.Field(f => f.URLCode); search.Field(f => f.Description); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
    model.Field(t => t.ArticleType).DefaultValue(new Commsights.Data.DataTransferObject.ModelTemplate());
    model.Field(t => t.DatePublish).Editable(false);
    model.Field(t => t.Title).Editable(false);
    model.Field(t => t.Media).Editable(false);
    model.Field(t => t.ChannelName).Editable(false);
    model.Field(t => t.Description).Editable(false);
    model.Field(t => t.URLCode).Editable(false);
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetDataTransferProductSearchByProductSearchIDToList", "ProductSearchProperty").Data("filterProductSearchProperty"))
)
)
            </div>
        </div>
    </div>
</div>



@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)
<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#ProductSearchPropertyDataTransfer").data("kendoGrid").dataSource.read();
        }
    }
    function filterProductSearchProperty(e) {
        var productSearchIDValue = $("#ID").val();
        return { productSearchID: productSearchIDValue };
    }
</script>