@{ ViewData["Title"] = "Email"; }
@model Commsights.MVC.Models.BaseViewModel
<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Email</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class='col-sm-2'>
                        @(Html.Kendo().DatePickerFor(Model => Model.DatePublishBegin)
                                     .Format("dd/MM/yyyy")
                                     .HtmlAttributes(new { @class = "form-control text-right", title = "Date begin" })
                                     .DateInput()
                                )
                    </div>
                    <div class='col-sm-2'>
                        @(Html.Kendo().DatePickerFor(Model => Model.DatePublishEnd)
                                     .Format("dd/MM/yyyy")
                                     .HtmlAttributes(new { @class = "form-control text-right", title = "Date end" })
                                     .DateInput()
                                )
                    </div>
                    <div class='col-sm-1'>
                        <button type="button" class="btn btn-success" title="Search" onclick="onSearch()">
                            <span class="fas fa-search"></span>
                        </button>
                    </div>                  
                    <div class='col-md-1'>
                        <a asp-route-ID="0" asp-action="Detail" asp-controller="EmailStorage" title="New" style="width:100%;" class="btn btn-success">
                            <span class="fas fa-plus"></span>
                        </a>
                    </div>
                </div>
                <br />
                @(Html.Kendo().Grid<Commsights.Data.DataTransferObject.EmailStorageDataTransfer>()
.Name("EmailStorageDataTransfer")
.Columns(columns =>
{    
    columns.Template(@"<a href='/EmailStorage/Detail?ID=#=ID#' class='btn btn-success' style='color:white;'><i class='fas fa-edit'></i></a>").Title("").Width(70).HtmlAttributes(new { style = "text-align:center;" });
    columns.Bound(t => t.DateSend).Title("Send").Width(150).Format("{0:dd/MM/yyyy HH:mm:ss}").HtmlAttributes(new { @class = "text-right", @style = "font-weight: bold;" });
    columns.Bound(t => t.Subject).Title("Subject").Width(300);
    columns.Bound(t => t.CompanyName).Title("Company").Width(200);
    columns.Bound(t => t.EmailTo).Title("Email To").Width(500);
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.Subject); search.Field(f => f.CompanyName); search.Field(f => f.EmailTo); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
    model.Field(t => t.ID).Editable(false);
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetDataTransferByDatePublishBeginAndDatePublishEndToList", "EmailStorage").Data("filterEmailStorage"))
)
)
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#EmailStorageDataTransfer").data("kendoGrid").dataSource.read();
        }
    }
    function filterEmailStorage(e) {
        var datePublishBeginValue = toDate02($("#DatePublishBegin").val());
        var datePublishEndValue = toDate02($("#DatePublishEnd").val());
        return { datePublishBegin: datePublishBeginValue, datePublishEnd: datePublishEndValue };
    }
    function onSearch() {        
        $("#EmailStorageDataTransfer").data("kendoGrid").dataSource.read();
    }
</script>
