@{ ViewData["Title"] = Model.Subject + " - Email detail"; }

@model Commsights.Data.Models.EmailStorage

<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Email detail</h3>
            </div>
            <div class="card-body">
                <form asp-action="Save" asp-controller="EmailStorage">
                    @Html.HiddenFor(Model => Model.ID)
                    <div class="row">
                        <div class='col-md-7'>
                        </div>
                        <div class='col-md-1'>
                            <button style="width:100%;" type="submit" title="Save" class="btn btn-primary">
                                <span class="fas fa-save"></span>
                            </button>
                        </div>
                        <div class='col-md-1'>
                            <a onclick="onSendMail()" title="Send" style="width:100%; cursor:pointer; color:white;" class="btn btn-success">
                                <span class="fas fa-paper-plane"></span>
                            </a>
                        </div>
                        <div class='col-md-1'>
                            <a target="_blank" asp-route-ID="@Model.ID" asp-action="Preview" asp-controller="EmailStorage" title="Preview" style="width:100%; cursor:pointer; color:white;" class="btn btn-success">
                                <span class="fas fa-print"></span>
                            </a>
                        </div>
                        <div class='col-md-1'>
                            <a asp-route-ID="0" asp-action="Detail" asp-controller="EmailStorage" title="New page" style="width:100%;" class="btn btn-success">
                                <span class="fas fa-plus"></span>
                            </a>
                        </div>
                        <div class='col-md-1'>
                            <a asp-action="List" asp-controller="EmailStorage" title="List" style="width:100%;" class="btn btn-info">
                                <span class="fas fa-arrow-left"></span>
                            </a>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class='form-group'>
                                <label for='Display'>Display</label>
                                @(Html.TextBoxFor(Model => Model.Display, new { placeholder = "Display", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='Subject'>Subject</label>
                                @(Html.TextBoxFor(Model => Model.Subject, new { placeholder = "Subject", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='EmailFrom'>Email send</label>
                                @(Html.TextBoxFor(Model => Model.EmailFrom, new { placeholder = "Email", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='Password'>Password</label>
                                @(Html.TextBoxFor(Model => Model.Password, new { placeholder = "Password", @class = "form-control", @type = "password" }))
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class='form-group'>
                                <label for='EmailTo'>To</label>
                                @(Html.TextBoxFor(Model => Model.EmailTo, new { placeholder = "To", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='EmailCC'>CC</label>
                                @(Html.TextBoxFor(Model => Model.EmailCC, new { placeholder = "CC", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='EmailBCC'>BCC</label>
                                @(Html.TextBoxFor(Model => Model.EmailBCC, new { placeholder = "BCC", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='DateSend'>Date send</label>
                                @(Html.TextBoxFor(Model => Model.DateSend, new { placeholder = "Date send", @class = "form-control text-right", @style= "font-weight: bold;", @disabled= "disabled" }))
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class='form-group'>
                                <label for='IndustryID'>Industry</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.IndustryID)
                                   .DataValueField("ID")
                                   .DataTextField("CodeName")
                                   .HtmlAttributes(new {@class = "form-control" })
                                    .Events(e => e.DataBound("onIndustryDataBound").Change("onIndustryChange"))
                                    .Filter(FilterType.StartsWith)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetIndustryToList", "Config")))
                                    )
                            </div>
                            <div class='form-group'>
                                <label for='CompanyID'>Company</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CompanyID)
                                   .DataValueField("ID")
                                   .DataTextField("Account")
                                   .HtmlAttributes(new {@class = "form-control" })
                                   .Events(e => e.DataBound("onCompanyDataBound").Change("onCompanyChange"))
                                    .Filter(FilterType.StartsWith)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetByIndustryIDToList", "Membership").Data("filterMembership")))
                                    )
                            </div>
                            <div class='form-group'>
                                <label for='CategoryID'>Category</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.CategoryID)
                                   .DataValueField("ID")
                                   .DataTextField("CodeName")
                                   .HtmlAttributes(new {@class = "form-control" })
                                    .Filter(FilterType.StartsWith)
                                   .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetEmailStorageCategoryToList", "Config")))
                                    )
                            </div>
                           
                            <div class='form-group'>
                                <label for='FileAttached'>Files attached</label>
                                <table>
                                    <tr>
                                        <td style="width:100%;" valign="top">
                                            @(Html.Kendo().Upload()
                              .Name("Upload")
                              .HtmlAttributes(new { @class = "form-control" })
                                )
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-md-12" style="width:100%;">
                            @Html.TextAreaFor(Model => Model.EmailBody)
                            <script src="/ckeditor/ckeditor.js"></script>
                            <script src="/ckeditor/adapters/jquery.js"></script>
                            <script>
                                CKEDITOR.replace("EmailBody", {
                                    on: {
                                        'instanceReady': function (evt) {
                                            evt.editor.resize("100%", "600");
                                        }
                                    }
                                });
                            </script>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Files attached</h3>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<Commsights.Data.Models.EmailStorageProperty>()
.Name("EmailStorageProperty")
.Columns(columns =>
{
    columns.Command(command => { command.Destroy().Text("&nbsp;").IconClass("fas fa-trash-alt").HtmlAttributes(new { style = "font-size: 16px; color:#ffffff; background-color:#d73925; padding-left:16px; padding-top:6px; border-radius: 6px; width:50px;" }); }).Width(70);
    columns.Bound(t => t.Title).Title("Title").Width(200);
    columns.Template(@"<a onclick='javascript:OpenWindowByURL(""/EmailStorage/#=FileName#"");' class='btn btn-success' style='color:white;'><i class='fas fa-paperclip'></i></a>").Title("File").Width(70).HtmlAttributes(new { style = "text-align:center;" });
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.Title); search.Field(f => f.FileName); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetParentIDAndFileToList", "EmailStorageProperty").Data("filterEmailStorageProperty"))
.Destroy(t => t.Action("Delete", "EmailStorageProperty"))
)
)
            </div>
        </div>
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Read</h3>
            </div>
            <div class="card-body">
                @(Html.Kendo().Grid<Commsights.Data.Models.EmailStorageProperty>()
.Name("EmailStoragePropertyRead")
.Columns(columns =>
{
    columns.Bound(t => t.Email).Title("Email").Width(200).HtmlAttributes(new { @style = "font-weight: bold;" });
    columns.Bound(t => t.DateRead).Title("Read").Width(200).Format("{0:dd/MM/yyyy HH:mm:ss}").HtmlAttributes(new { @class = "text-right", @style= "font-weight: bold;" });
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.Title); search.Field(f => f.FileName); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
})
.Read(t => t.Action("GetParentIDAndEmailStorageToList", "EmailStorageProperty").Data("filterEmailStorageProperty"))
)
)
            </div>
        </div>
    </div>
</div>
@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#EmailStorageProperty").data("kendoGrid").dataSource.read();
        }
    }
    function filterEmailStorageProperty(e) {
        var parentIDValue = $("#ID").val();
        return { parentID: parentIDValue };
    }
    function filterMembership(e) {
        var industryIDValue = $("#IndustryID").data("kendoDropDownList").value();
        return { industryID: industryIDValue };
    }
    function onIndustryDataBound() {
        var ID = $("#ID").val();
        var control = $("#IndustryID").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            if (ID == 0) {
                control.select(0);
            }
           control.trigger("change");
        }
    }
    function onIndustryChange() {
        $("#CompanyID").data("kendoDropDownList").dataSource.read();
    }
    function onCompanyDataBound() {
        var ID = $("#ID").val();
        var control = $("#CompanyID").data("kendoDropDownList");
        var controlLength = control.dataSource.data().length;
        if (controlLength > 0) {
            if (ID == 0) {
                control.select(0);
            }
                control.trigger("change");
        }
    }
    function onCompanyChange() {
    }
    function onSendMail() {
        BeginRequestHandler();
        var IDValue = $("#ID").val();
         $.ajax({
            type: 'GET',
            url: "@Url.Action("SendMailByID", "EmailStorage")",
            data: {
                ID: IDValue
            },
             success: function (e) {
                 var messageType = e.split('-')[0];
                 var note = e.split('-')[1];
                 var notification = $("#Notification").data("kendoNotification");
                 notification.show(note, messageType);
                 EndRequestHandler();
            }
         }).done(() => {

        });

    }
</script>
